from django.db import models

class Ingredient(models.Model):
    name = models.CharField(max_length=40)
    image = models.CharField(max_length=40)

    details = models.OneToOneField('Details', null=False)

    dishes = models.ManyToManyField('Dish', related_name='ingredients', null=True)
    substitutes = models.ManyToManyField('self', symmetrical=False, null=True)

    def __str__(self):
        return self.name

    class Meta:
        ordering = ('name',)

class Dish(models.Model):
    name = models.CharField(max_length=40)
    image = models.CharField(max_length=40)

    details = models.OneToOneField('Details', null=False)

    # "ingredients" of Ingredient objects by related_name
    # substitutes of ingredeints generated by iterating through "ingredients"

    similar = models.ManyToManyField('self', symmetrical=True, null=True)

    def __str__(self):
        return self.name

    class Meta:
        ordering = ('name',)

class Details(model.Model):
    # percent DV
    protein = models.PositiveSmallIntegerField(default=0)
    iron = models.PositiveSmallIntegerField(default=0)
    calcium = models.PositiveSmallIntegerField(default=0)
    fiber = models.PositiveSmallIntegerField(default=0)
    carbs = models.PositiveSmallIntegerField(default=0)
    fats = models.PositiveSmallIntegerField(default=0)

    isVegetarian = models.BooleanField(blank=False)
    isVegan = models.BooleanField(blank=False)

    def __str__(self):
        return str(self.protein) + ", " \
             + str(self.iron) + ", " \
             + str(self.calcium) + ", " \
             + str(self.fiber) + ", " \
             + str(self.carbs) + ", " \
             + str(self.fats)